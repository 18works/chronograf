package operations

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the generate command

import (
	"net/http"

	context "golang.org/x/net/context"

	middleware "github.com/go-openapi/runtime/middleware"
)

// DeleteSourcesIDUsersUserIDExplorationsExplorationIDHandlerFunc turns a function with the right signature into a delete sources ID users user ID explorations exploration ID handler
type DeleteSourcesIDUsersUserIDExplorationsExplorationIDHandlerFunc func(context.Context, DeleteSourcesIDUsersUserIDExplorationsExplorationIDParams) middleware.Responder

// Handle executing the request and returning a response
func (fn DeleteSourcesIDUsersUserIDExplorationsExplorationIDHandlerFunc) Handle(ctx context.Context, params DeleteSourcesIDUsersUserIDExplorationsExplorationIDParams) middleware.Responder {
	return fn(ctx, params)
}

// DeleteSourcesIDUsersUserIDExplorationsExplorationIDHandler interface for that can handle valid delete sources ID users user ID explorations exploration ID params
type DeleteSourcesIDUsersUserIDExplorationsExplorationIDHandler interface {
	Handle(context.Context, DeleteSourcesIDUsersUserIDExplorationsExplorationIDParams) middleware.Responder
}

// NewDeleteSourcesIDUsersUserIDExplorationsExplorationID creates a new http.Handler for the delete sources ID users user ID explorations exploration ID operation
func NewDeleteSourcesIDUsersUserIDExplorationsExplorationID(ctx *middleware.Context, handler DeleteSourcesIDUsersUserIDExplorationsExplorationIDHandler) *DeleteSourcesIDUsersUserIDExplorationsExplorationID {
	return &DeleteSourcesIDUsersUserIDExplorationsExplorationID{Context: ctx, Handler: handler}
}

/*DeleteSourcesIDUsersUserIDExplorationsExplorationID swagger:route DELETE /sources/{id}/users/{user_id}/explorations/{exploration_id} deleteSourcesIdUsersUserIdExplorationsExplorationId

This specific exporer session will be removed.

*/
type DeleteSourcesIDUsersUserIDExplorationsExplorationID struct {
	Context *middleware.Context
	Handler DeleteSourcesIDUsersUserIDExplorationsExplorationIDHandler
}

func (o *DeleteSourcesIDUsersUserIDExplorationsExplorationID) ServeHTTP(rw http.ResponseWriter, r *http.Request) {
	route, _ := o.Context.RouteInfo(r)
	var Params = NewDeleteSourcesIDUsersUserIDExplorationsExplorationIDParams()

	if err := o.Context.BindValidRequest(r, route, &Params); err != nil { // bind params
		o.Context.Respond(rw, r, route.Produces, route, err)
		return
	}

	res := o.Handler.Handle(context.Background(), Params) // actually handle the request

	o.Context.Respond(rw, r, route.Produces, route, res)

}
