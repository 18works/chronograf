package operations

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"net/http"

	"github.com/go-openapi/runtime"

	"github.com/influxdata/mrfusion/models"
)

/*PostKapacitorsCreated Successfully created kapacitor source

swagger:response postKapacitorsCreated
*/
type PostKapacitorsCreated struct {
	/*Location of the newly created kapacitor resource.
	  Required: true
	*/
	Location string `json:"Location"`

	// In: body
	Payload *models.Kapacitor `json:"body,omitempty"`
}

// NewPostKapacitorsCreated creates PostKapacitorsCreated with default headers values
func NewPostKapacitorsCreated() *PostKapacitorsCreated {
	return &PostKapacitorsCreated{}
}

// WithLocation adds the location to the post kapacitors created response
func (o *PostKapacitorsCreated) WithLocation(location string) *PostKapacitorsCreated {
	o.Location = location
	return o
}

// SetLocation sets the location to the post kapacitors created response
func (o *PostKapacitorsCreated) SetLocation(location string) {
	o.Location = location
}

// WithPayload adds the payload to the post kapacitors created response
func (o *PostKapacitorsCreated) WithPayload(payload *models.Kapacitor) *PostKapacitorsCreated {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the post kapacitors created response
func (o *PostKapacitorsCreated) SetPayload(payload *models.Kapacitor) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *PostKapacitorsCreated) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	// response header Location
	rw.Header().Add("Location", fmt.Sprintf("%v", o.Location))

	rw.WriteHeader(201)
	if o.Payload != nil {
		if err := producer.Produce(rw, o.Payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

/*PostKapacitorsDefault A processing or an unexpected error.

swagger:response postKapacitorsDefault
*/
type PostKapacitorsDefault struct {
	_statusCode int

	// In: body
	Payload *models.Error `json:"body,omitempty"`
}

// NewPostKapacitorsDefault creates PostKapacitorsDefault with default headers values
func NewPostKapacitorsDefault(code int) *PostKapacitorsDefault {
	if code <= 0 {
		code = 500
	}

	return &PostKapacitorsDefault{
		_statusCode: code,
	}
}

// WithStatusCode adds the status to the post kapacitors default response
func (o *PostKapacitorsDefault) WithStatusCode(code int) *PostKapacitorsDefault {
	o._statusCode = code
	return o
}

// SetStatusCode sets the status to the post kapacitors default response
func (o *PostKapacitorsDefault) SetStatusCode(code int) {
	o._statusCode = code
}

// WithPayload adds the payload to the post kapacitors default response
func (o *PostKapacitorsDefault) WithPayload(payload *models.Error) *PostKapacitorsDefault {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the post kapacitors default response
func (o *PostKapacitorsDefault) SetPayload(payload *models.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *PostKapacitorsDefault) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(o._statusCode)
	if o.Payload != nil {
		if err := producer.Produce(rw, o.Payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}
