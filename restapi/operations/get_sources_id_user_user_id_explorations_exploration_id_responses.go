package operations

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"

	"github.com/influxdata/mrfusion/models"
)

/*GetSourcesIDUserUserIDExplorationsExplorationIDOK Information relating to the exploration

swagger:response getSourcesIdUserUserIdExplorationsExplorationIdOK
*/
type GetSourcesIDUserUserIDExplorationsExplorationIDOK struct {

	// In: body
	Payload *models.Exploration `json:"body,omitempty"`
}

// NewGetSourcesIDUserUserIDExplorationsExplorationIDOK creates GetSourcesIDUserUserIDExplorationsExplorationIDOK with default headers values
func NewGetSourcesIDUserUserIDExplorationsExplorationIDOK() *GetSourcesIDUserUserIDExplorationsExplorationIDOK {
	return &GetSourcesIDUserUserIDExplorationsExplorationIDOK{}
}

// WithPayload adds the payload to the get sources Id user user Id explorations exploration Id o k response
func (o *GetSourcesIDUserUserIDExplorationsExplorationIDOK) WithPayload(payload *models.Exploration) *GetSourcesIDUserUserIDExplorationsExplorationIDOK {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the get sources Id user user Id explorations exploration Id o k response
func (o *GetSourcesIDUserUserIDExplorationsExplorationIDOK) SetPayload(payload *models.Exploration) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *GetSourcesIDUserUserIDExplorationsExplorationIDOK) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(200)
	if o.Payload != nil {
		if err := producer.Produce(rw, o.Payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

/*GetSourcesIDUserUserIDExplorationsExplorationIDNotFound Data source id, user, or exploration does not exist.

swagger:response getSourcesIdUserUserIdExplorationsExplorationIdNotFound
*/
type GetSourcesIDUserUserIDExplorationsExplorationIDNotFound struct {

	// In: body
	Payload *models.Error `json:"body,omitempty"`
}

// NewGetSourcesIDUserUserIDExplorationsExplorationIDNotFound creates GetSourcesIDUserUserIDExplorationsExplorationIDNotFound with default headers values
func NewGetSourcesIDUserUserIDExplorationsExplorationIDNotFound() *GetSourcesIDUserUserIDExplorationsExplorationIDNotFound {
	return &GetSourcesIDUserUserIDExplorationsExplorationIDNotFound{}
}

// WithPayload adds the payload to the get sources Id user user Id explorations exploration Id not found response
func (o *GetSourcesIDUserUserIDExplorationsExplorationIDNotFound) WithPayload(payload *models.Error) *GetSourcesIDUserUserIDExplorationsExplorationIDNotFound {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the get sources Id user user Id explorations exploration Id not found response
func (o *GetSourcesIDUserUserIDExplorationsExplorationIDNotFound) SetPayload(payload *models.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *GetSourcesIDUserUserIDExplorationsExplorationIDNotFound) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(404)
	if o.Payload != nil {
		if err := producer.Produce(rw, o.Payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

/*GetSourcesIDUserUserIDExplorationsExplorationIDDefault Unexpected internal service error

swagger:response getSourcesIdUserUserIdExplorationsExplorationIdDefault
*/
type GetSourcesIDUserUserIDExplorationsExplorationIDDefault struct {
	_statusCode int

	// In: body
	Payload *models.Error `json:"body,omitempty"`
}

// NewGetSourcesIDUserUserIDExplorationsExplorationIDDefault creates GetSourcesIDUserUserIDExplorationsExplorationIDDefault with default headers values
func NewGetSourcesIDUserUserIDExplorationsExplorationIDDefault(code int) *GetSourcesIDUserUserIDExplorationsExplorationIDDefault {
	if code <= 0 {
		code = 500
	}

	return &GetSourcesIDUserUserIDExplorationsExplorationIDDefault{
		_statusCode: code,
	}
}

// WithStatusCode adds the status to the get sources ID user user ID explorations exploration ID default response
func (o *GetSourcesIDUserUserIDExplorationsExplorationIDDefault) WithStatusCode(code int) *GetSourcesIDUserUserIDExplorationsExplorationIDDefault {
	o._statusCode = code
	return o
}

// SetStatusCode sets the status to the get sources ID user user ID explorations exploration ID default response
func (o *GetSourcesIDUserUserIDExplorationsExplorationIDDefault) SetStatusCode(code int) {
	o._statusCode = code
}

// WithPayload adds the payload to the get sources ID user user ID explorations exploration ID default response
func (o *GetSourcesIDUserUserIDExplorationsExplorationIDDefault) WithPayload(payload *models.Error) *GetSourcesIDUserUserIDExplorationsExplorationIDDefault {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the get sources ID user user ID explorations exploration ID default response
func (o *GetSourcesIDUserUserIDExplorationsExplorationIDDefault) SetPayload(payload *models.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *GetSourcesIDUserUserIDExplorationsExplorationIDDefault) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(o._statusCode)
	if o.Payload != nil {
		if err := producer.Produce(rw, o.Payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}
