package operations

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"

	"github.com/influxdata/chronograf/models"
)

/*GetSourcesIDUsersUserIDExplorationsExplorationIDOK Information relating to the exploration

swagger:response getSourcesIdUsersUserIdExplorationsExplorationIdOK
*/
type GetSourcesIDUsersUserIDExplorationsExplorationIDOK struct {

	// In: body
	Payload *models.Exploration `json:"body,omitempty"`
}

// NewGetSourcesIDUsersUserIDExplorationsExplorationIDOK creates GetSourcesIDUsersUserIDExplorationsExplorationIDOK with default headers values
func NewGetSourcesIDUsersUserIDExplorationsExplorationIDOK() *GetSourcesIDUsersUserIDExplorationsExplorationIDOK {
	return &GetSourcesIDUsersUserIDExplorationsExplorationIDOK{}
}

// WithPayload adds the payload to the get sources Id users user Id explorations exploration Id o k response
func (o *GetSourcesIDUsersUserIDExplorationsExplorationIDOK) WithPayload(payload *models.Exploration) *GetSourcesIDUsersUserIDExplorationsExplorationIDOK {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the get sources Id users user Id explorations exploration Id o k response
func (o *GetSourcesIDUsersUserIDExplorationsExplorationIDOK) SetPayload(payload *models.Exploration) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *GetSourcesIDUsersUserIDExplorationsExplorationIDOK) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(200)
	if o.Payload != nil {
		if err := producer.Produce(rw, o.Payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

/*GetSourcesIDUsersUserIDExplorationsExplorationIDNotFound Data source id, user, or exploration does not exist.

swagger:response getSourcesIdUsersUserIdExplorationsExplorationIdNotFound
*/
type GetSourcesIDUsersUserIDExplorationsExplorationIDNotFound struct {

	// In: body
	Payload *models.Error `json:"body,omitempty"`
}

// NewGetSourcesIDUsersUserIDExplorationsExplorationIDNotFound creates GetSourcesIDUsersUserIDExplorationsExplorationIDNotFound with default headers values
func NewGetSourcesIDUsersUserIDExplorationsExplorationIDNotFound() *GetSourcesIDUsersUserIDExplorationsExplorationIDNotFound {
	return &GetSourcesIDUsersUserIDExplorationsExplorationIDNotFound{}
}

// WithPayload adds the payload to the get sources Id users user Id explorations exploration Id not found response
func (o *GetSourcesIDUsersUserIDExplorationsExplorationIDNotFound) WithPayload(payload *models.Error) *GetSourcesIDUsersUserIDExplorationsExplorationIDNotFound {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the get sources Id users user Id explorations exploration Id not found response
func (o *GetSourcesIDUsersUserIDExplorationsExplorationIDNotFound) SetPayload(payload *models.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *GetSourcesIDUsersUserIDExplorationsExplorationIDNotFound) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(404)
	if o.Payload != nil {
		if err := producer.Produce(rw, o.Payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

/*GetSourcesIDUsersUserIDExplorationsExplorationIDDefault Unexpected internal service error

swagger:response getSourcesIdUsersUserIdExplorationsExplorationIdDefault
*/
type GetSourcesIDUsersUserIDExplorationsExplorationIDDefault struct {
	_statusCode int

	// In: body
	Payload *models.Error `json:"body,omitempty"`
}

// NewGetSourcesIDUsersUserIDExplorationsExplorationIDDefault creates GetSourcesIDUsersUserIDExplorationsExplorationIDDefault with default headers values
func NewGetSourcesIDUsersUserIDExplorationsExplorationIDDefault(code int) *GetSourcesIDUsersUserIDExplorationsExplorationIDDefault {
	if code <= 0 {
		code = 500
	}

	return &GetSourcesIDUsersUserIDExplorationsExplorationIDDefault{
		_statusCode: code,
	}
}

// WithStatusCode adds the status to the get sources ID users user ID explorations exploration ID default response
func (o *GetSourcesIDUsersUserIDExplorationsExplorationIDDefault) WithStatusCode(code int) *GetSourcesIDUsersUserIDExplorationsExplorationIDDefault {
	o._statusCode = code
	return o
}

// SetStatusCode sets the status to the get sources ID users user ID explorations exploration ID default response
func (o *GetSourcesIDUsersUserIDExplorationsExplorationIDDefault) SetStatusCode(code int) {
	o._statusCode = code
}

// WithPayload adds the payload to the get sources ID users user ID explorations exploration ID default response
func (o *GetSourcesIDUsersUserIDExplorationsExplorationIDDefault) WithPayload(payload *models.Error) *GetSourcesIDUsersUserIDExplorationsExplorationIDDefault {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the get sources ID users user ID explorations exploration ID default response
func (o *GetSourcesIDUsersUserIDExplorationsExplorationIDDefault) SetPayload(payload *models.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *GetSourcesIDUsersUserIDExplorationsExplorationIDDefault) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(o._statusCode)
	if o.Payload != nil {
		if err := producer.Produce(rw, o.Payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}
