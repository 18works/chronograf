// Code generated by go-bindata.
// sources:
// ui/build/24d12bd76c3a876e54c103a800a9eb49.svg
// ui/build/2ec4663c887ea215056e9952e8b94b8b.woff
// ui/build/38624467180a60d999cd749f3d580b36.ttf
// ui/build/3f68500b267c20051088bcc0698af773.ttf
// ui/build/448c34a56d699c29117adc64c43affeb.woff2
// ui/build/45c73723862c6fc5eb3d6961db2d71fb.eot
// ui/build/4b5a84aaf1c9485e060c503a0ff8cadb.woff2
// ui/build/4f63a23c789567a91aafabfbb17ad9a2.woff2
// ui/build/76a4f23c6be74fd309e0d0fd2c27a5de.svg
// ui/build/7b5fb88f12bec8143f00e21bc3222124.ttf
// ui/build/7c87870ab40d63cfb8870c1f183f9939.ttf
// ui/build/893fe14628bd7ac498d550e96367e1be.ttf
// ui/build/89889688147bd7575d6327160d64e760.svg
// ui/build/ac3f799d5bbaf5196fab15ab8de8431c.ttf
// ui/build/app.dev.js
// ui/build/app.js
// ui/build/cdb1d47e7ffa00c380374f74d2937f7e.eot
// ui/build/d329cc8b34667f114a95422aaad1b063.ttf
// ui/build/dfb02f8f6d0cedc009ee5887cc68f1f3.woff
// ui/build/e18bbf611f2a2e43afc071aa2f4e1512.ttf
// ui/build/f4769f9bdb7466be65088239c12046d1.eot
// ui/build/fa2772327f55d8198301fdb8bcfc8158.woff
// ui/build/fe13e4170719c2fc586501e777bde143.ttf
// ui/build/index.html
// ui/build/style.css
// DO NOT EDIT!

package dist

import (
	"fmt"
	"io/ioutil"
	"os"
	"path/filepath"
	"strings"
)

// bindataRead reads the given file from disk. It returns an error on failure.
func bindataRead(path, name string) ([]byte, error) {
	buf, err := ioutil.ReadFile(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset %s at %s: %v", name, path, err)
	}
	return buf, err
}

type asset struct {
	bytes []byte
	info  os.FileInfo
}

// uiBuild24d12bd76c3a876e54c103a800a9eb49Svg reads file data from disk. It returns an error on failure.
func uiBuild24d12bd76c3a876e54c103a800a9eb49Svg() (*asset, error) {
	path := filepath.Join(rootDir, "ui/build/24d12bd76c3a876e54c103a800a9eb49.svg")
	name := "ui/build/24d12bd76c3a876e54c103a800a9eb49.svg"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// uiBuild2ec4663c887ea215056e9952e8b94b8bWoff reads file data from disk. It returns an error on failure.
func uiBuild2ec4663c887ea215056e9952e8b94b8bWoff() (*asset, error) {
	path := filepath.Join(rootDir, "ui/build/2ec4663c887ea215056e9952e8b94b8b.woff")
	name := "ui/build/2ec4663c887ea215056e9952e8b94b8b.woff"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// uiBuild38624467180a60d999cd749f3d580b36Ttf reads file data from disk. It returns an error on failure.
func uiBuild38624467180a60d999cd749f3d580b36Ttf() (*asset, error) {
	path := filepath.Join(rootDir, "ui/build/38624467180a60d999cd749f3d580b36.ttf")
	name := "ui/build/38624467180a60d999cd749f3d580b36.ttf"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// uiBuild3f68500b267c20051088bcc0698af773Ttf reads file data from disk. It returns an error on failure.
func uiBuild3f68500b267c20051088bcc0698af773Ttf() (*asset, error) {
	path := filepath.Join(rootDir, "ui/build/3f68500b267c20051088bcc0698af773.ttf")
	name := "ui/build/3f68500b267c20051088bcc0698af773.ttf"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// uiBuild448c34a56d699c29117adc64c43affebWoff2 reads file data from disk. It returns an error on failure.
func uiBuild448c34a56d699c29117adc64c43affebWoff2() (*asset, error) {
	path := filepath.Join(rootDir, "ui/build/448c34a56d699c29117adc64c43affeb.woff2")
	name := "ui/build/448c34a56d699c29117adc64c43affeb.woff2"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// uiBuild45c73723862c6fc5eb3d6961db2d71fbEot reads file data from disk. It returns an error on failure.
func uiBuild45c73723862c6fc5eb3d6961db2d71fbEot() (*asset, error) {
	path := filepath.Join(rootDir, "ui/build/45c73723862c6fc5eb3d6961db2d71fb.eot")
	name := "ui/build/45c73723862c6fc5eb3d6961db2d71fb.eot"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// uiBuild4b5a84aaf1c9485e060c503a0ff8cadbWoff2 reads file data from disk. It returns an error on failure.
func uiBuild4b5a84aaf1c9485e060c503a0ff8cadbWoff2() (*asset, error) {
	path := filepath.Join(rootDir, "ui/build/4b5a84aaf1c9485e060c503a0ff8cadb.woff2")
	name := "ui/build/4b5a84aaf1c9485e060c503a0ff8cadb.woff2"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// uiBuild4f63a23c789567a91aafabfbb17ad9a2Woff2 reads file data from disk. It returns an error on failure.
func uiBuild4f63a23c789567a91aafabfbb17ad9a2Woff2() (*asset, error) {
	path := filepath.Join(rootDir, "ui/build/4f63a23c789567a91aafabfbb17ad9a2.woff2")
	name := "ui/build/4f63a23c789567a91aafabfbb17ad9a2.woff2"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// uiBuild76a4f23c6be74fd309e0d0fd2c27a5deSvg reads file data from disk. It returns an error on failure.
func uiBuild76a4f23c6be74fd309e0d0fd2c27a5deSvg() (*asset, error) {
	path := filepath.Join(rootDir, "ui/build/76a4f23c6be74fd309e0d0fd2c27a5de.svg")
	name := "ui/build/76a4f23c6be74fd309e0d0fd2c27a5de.svg"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// uiBuild7b5fb88f12bec8143f00e21bc3222124Ttf reads file data from disk. It returns an error on failure.
func uiBuild7b5fb88f12bec8143f00e21bc3222124Ttf() (*asset, error) {
	path := filepath.Join(rootDir, "ui/build/7b5fb88f12bec8143f00e21bc3222124.ttf")
	name := "ui/build/7b5fb88f12bec8143f00e21bc3222124.ttf"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// uiBuild7c87870ab40d63cfb8870c1f183f9939Ttf reads file data from disk. It returns an error on failure.
func uiBuild7c87870ab40d63cfb8870c1f183f9939Ttf() (*asset, error) {
	path := filepath.Join(rootDir, "ui/build/7c87870ab40d63cfb8870c1f183f9939.ttf")
	name := "ui/build/7c87870ab40d63cfb8870c1f183f9939.ttf"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// uiBuild893fe14628bd7ac498d550e96367e1beTtf reads file data from disk. It returns an error on failure.
func uiBuild893fe14628bd7ac498d550e96367e1beTtf() (*asset, error) {
	path := filepath.Join(rootDir, "ui/build/893fe14628bd7ac498d550e96367e1be.ttf")
	name := "ui/build/893fe14628bd7ac498d550e96367e1be.ttf"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// uiBuild89889688147bd7575d6327160d64e760Svg reads file data from disk. It returns an error on failure.
func uiBuild89889688147bd7575d6327160d64e760Svg() (*asset, error) {
	path := filepath.Join(rootDir, "ui/build/89889688147bd7575d6327160d64e760.svg")
	name := "ui/build/89889688147bd7575d6327160d64e760.svg"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// uiBuildAc3f799d5bbaf5196fab15ab8de8431cTtf reads file data from disk. It returns an error on failure.
func uiBuildAc3f799d5bbaf5196fab15ab8de8431cTtf() (*asset, error) {
	path := filepath.Join(rootDir, "ui/build/ac3f799d5bbaf5196fab15ab8de8431c.ttf")
	name := "ui/build/ac3f799d5bbaf5196fab15ab8de8431c.ttf"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// uiBuildAppDevJs reads file data from disk. It returns an error on failure.
func uiBuildAppDevJs() (*asset, error) {
	path := filepath.Join(rootDir, "ui/build/app.dev.js")
	name := "ui/build/app.dev.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// uiBuildAppJs reads file data from disk. It returns an error on failure.
func uiBuildAppJs() (*asset, error) {
	path := filepath.Join(rootDir, "ui/build/app.js")
	name := "ui/build/app.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// uiBuildCdb1d47e7ffa00c380374f74d2937f7eEot reads file data from disk. It returns an error on failure.
func uiBuildCdb1d47e7ffa00c380374f74d2937f7eEot() (*asset, error) {
	path := filepath.Join(rootDir, "ui/build/cdb1d47e7ffa00c380374f74d2937f7e.eot")
	name := "ui/build/cdb1d47e7ffa00c380374f74d2937f7e.eot"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// uiBuildD329cc8b34667f114a95422aaad1b063Ttf reads file data from disk. It returns an error on failure.
func uiBuildD329cc8b34667f114a95422aaad1b063Ttf() (*asset, error) {
	path := filepath.Join(rootDir, "ui/build/d329cc8b34667f114a95422aaad1b063.ttf")
	name := "ui/build/d329cc8b34667f114a95422aaad1b063.ttf"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// uiBuildDfb02f8f6d0cedc009ee5887cc68f1f3Woff reads file data from disk. It returns an error on failure.
func uiBuildDfb02f8f6d0cedc009ee5887cc68f1f3Woff() (*asset, error) {
	path := filepath.Join(rootDir, "ui/build/dfb02f8f6d0cedc009ee5887cc68f1f3.woff")
	name := "ui/build/dfb02f8f6d0cedc009ee5887cc68f1f3.woff"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// uiBuildE18bbf611f2a2e43afc071aa2f4e1512Ttf reads file data from disk. It returns an error on failure.
func uiBuildE18bbf611f2a2e43afc071aa2f4e1512Ttf() (*asset, error) {
	path := filepath.Join(rootDir, "ui/build/e18bbf611f2a2e43afc071aa2f4e1512.ttf")
	name := "ui/build/e18bbf611f2a2e43afc071aa2f4e1512.ttf"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// uiBuildF4769f9bdb7466be65088239c12046d1Eot reads file data from disk. It returns an error on failure.
func uiBuildF4769f9bdb7466be65088239c12046d1Eot() (*asset, error) {
	path := filepath.Join(rootDir, "ui/build/f4769f9bdb7466be65088239c12046d1.eot")
	name := "ui/build/f4769f9bdb7466be65088239c12046d1.eot"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// uiBuildFa2772327f55d8198301fdb8bcfc8158Woff reads file data from disk. It returns an error on failure.
func uiBuildFa2772327f55d8198301fdb8bcfc8158Woff() (*asset, error) {
	path := filepath.Join(rootDir, "ui/build/fa2772327f55d8198301fdb8bcfc8158.woff")
	name := "ui/build/fa2772327f55d8198301fdb8bcfc8158.woff"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// uiBuildFe13e4170719c2fc586501e777bde143Ttf reads file data from disk. It returns an error on failure.
func uiBuildFe13e4170719c2fc586501e777bde143Ttf() (*asset, error) {
	path := filepath.Join(rootDir, "ui/build/fe13e4170719c2fc586501e777bde143.ttf")
	name := "ui/build/fe13e4170719c2fc586501e777bde143.ttf"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// uiBuildIndexHtml reads file data from disk. It returns an error on failure.
func uiBuildIndexHtml() (*asset, error) {
	path := filepath.Join(rootDir, "ui/build/index.html")
	name := "ui/build/index.html"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// uiBuildStyleCss reads file data from disk. It returns an error on failure.
func uiBuildStyleCss() (*asset, error) {
	path := filepath.Join(rootDir, "ui/build/style.css")
	name := "ui/build/style.css"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// Asset loads and returns the asset for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func Asset(name string) ([]byte, error) {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[cannonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("Asset %s can't read by error: %v", name, err)
		}
		return a.bytes, nil
	}
	return nil, fmt.Errorf("Asset %s not found", name)
}

// MustAsset is like Asset but panics when Asset would return an error.
// It simplifies safe initialization of global variables.
func MustAsset(name string) []byte {
	a, err := Asset(name)
	if err != nil {
		panic("asset: Asset(" + name + "): " + err.Error())
	}

	return a
}

// AssetInfo loads and returns the asset info for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func AssetInfo(name string) (os.FileInfo, error) {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[cannonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("AssetInfo %s can't read by error: %v", name, err)
		}
		return a.info, nil
	}
	return nil, fmt.Errorf("AssetInfo %s not found", name)
}

// AssetNames returns the names of the assets.
func AssetNames() []string {
	names := make([]string, 0, len(_bindata))
	for name := range _bindata {
		names = append(names, name)
	}
	return names
}

// _bindata is a table, holding each asset generator, mapped to its name.
var _bindata = map[string]func() (*asset, error){
	"ui/build/24d12bd76c3a876e54c103a800a9eb49.svg": uiBuild24d12bd76c3a876e54c103a800a9eb49Svg,
	"ui/build/2ec4663c887ea215056e9952e8b94b8b.woff": uiBuild2ec4663c887ea215056e9952e8b94b8bWoff,
	"ui/build/38624467180a60d999cd749f3d580b36.ttf": uiBuild38624467180a60d999cd749f3d580b36Ttf,
	"ui/build/3f68500b267c20051088bcc0698af773.ttf": uiBuild3f68500b267c20051088bcc0698af773Ttf,
	"ui/build/448c34a56d699c29117adc64c43affeb.woff2": uiBuild448c34a56d699c29117adc64c43affebWoff2,
	"ui/build/45c73723862c6fc5eb3d6961db2d71fb.eot": uiBuild45c73723862c6fc5eb3d6961db2d71fbEot,
	"ui/build/4b5a84aaf1c9485e060c503a0ff8cadb.woff2": uiBuild4b5a84aaf1c9485e060c503a0ff8cadbWoff2,
	"ui/build/4f63a23c789567a91aafabfbb17ad9a2.woff2": uiBuild4f63a23c789567a91aafabfbb17ad9a2Woff2,
	"ui/build/76a4f23c6be74fd309e0d0fd2c27a5de.svg": uiBuild76a4f23c6be74fd309e0d0fd2c27a5deSvg,
	"ui/build/7b5fb88f12bec8143f00e21bc3222124.ttf": uiBuild7b5fb88f12bec8143f00e21bc3222124Ttf,
	"ui/build/7c87870ab40d63cfb8870c1f183f9939.ttf": uiBuild7c87870ab40d63cfb8870c1f183f9939Ttf,
	"ui/build/893fe14628bd7ac498d550e96367e1be.ttf": uiBuild893fe14628bd7ac498d550e96367e1beTtf,
	"ui/build/89889688147bd7575d6327160d64e760.svg": uiBuild89889688147bd7575d6327160d64e760Svg,
	"ui/build/ac3f799d5bbaf5196fab15ab8de8431c.ttf": uiBuildAc3f799d5bbaf5196fab15ab8de8431cTtf,
	"ui/build/app.dev.js": uiBuildAppDevJs,
	"ui/build/app.js": uiBuildAppJs,
	"ui/build/cdb1d47e7ffa00c380374f74d2937f7e.eot": uiBuildCdb1d47e7ffa00c380374f74d2937f7eEot,
	"ui/build/d329cc8b34667f114a95422aaad1b063.ttf": uiBuildD329cc8b34667f114a95422aaad1b063Ttf,
	"ui/build/dfb02f8f6d0cedc009ee5887cc68f1f3.woff": uiBuildDfb02f8f6d0cedc009ee5887cc68f1f3Woff,
	"ui/build/e18bbf611f2a2e43afc071aa2f4e1512.ttf": uiBuildE18bbf611f2a2e43afc071aa2f4e1512Ttf,
	"ui/build/f4769f9bdb7466be65088239c12046d1.eot": uiBuildF4769f9bdb7466be65088239c12046d1Eot,
	"ui/build/fa2772327f55d8198301fdb8bcfc8158.woff": uiBuildFa2772327f55d8198301fdb8bcfc8158Woff,
	"ui/build/fe13e4170719c2fc586501e777bde143.ttf": uiBuildFe13e4170719c2fc586501e777bde143Ttf,
	"ui/build/index.html": uiBuildIndexHtml,
	"ui/build/style.css": uiBuildStyleCss,
}

// AssetDir returns the file names below a certain
// directory embedded in the file by go-bindata.
// For example if you run go-bindata on data/... and data contains the
// following hierarchy:
//     data/
//       foo.txt
//       img/
//         a.png
//         b.png
// then AssetDir("data") would return []string{"foo.txt", "img"}
// AssetDir("data/img") would return []string{"a.png", "b.png"}
// AssetDir("foo.txt") and AssetDir("notexist") would return an error
// AssetDir("") will return []string{"data"}.
func AssetDir(name string) ([]string, error) {
	node := _bintree
	if len(name) != 0 {
		cannonicalName := strings.Replace(name, "\\", "/", -1)
		pathList := strings.Split(cannonicalName, "/")
		for _, p := range pathList {
			node = node.Children[p]
			if node == nil {
				return nil, fmt.Errorf("Asset %s not found", name)
			}
		}
	}
	if node.Func != nil {
		return nil, fmt.Errorf("Asset %s not found", name)
	}
	rv := make([]string, 0, len(node.Children))
	for childName := range node.Children {
		rv = append(rv, childName)
	}
	return rv, nil
}

type bintree struct {
	Func     func() (*asset, error)
	Children map[string]*bintree
}
var _bintree = &bintree{nil, map[string]*bintree{
	"ui": &bintree{nil, map[string]*bintree{
		"build": &bintree{nil, map[string]*bintree{
			"24d12bd76c3a876e54c103a800a9eb49.svg": &bintree{uiBuild24d12bd76c3a876e54c103a800a9eb49Svg, map[string]*bintree{}},
			"2ec4663c887ea215056e9952e8b94b8b.woff": &bintree{uiBuild2ec4663c887ea215056e9952e8b94b8bWoff, map[string]*bintree{}},
			"38624467180a60d999cd749f3d580b36.ttf": &bintree{uiBuild38624467180a60d999cd749f3d580b36Ttf, map[string]*bintree{}},
			"3f68500b267c20051088bcc0698af773.ttf": &bintree{uiBuild3f68500b267c20051088bcc0698af773Ttf, map[string]*bintree{}},
			"448c34a56d699c29117adc64c43affeb.woff2": &bintree{uiBuild448c34a56d699c29117adc64c43affebWoff2, map[string]*bintree{}},
			"45c73723862c6fc5eb3d6961db2d71fb.eot": &bintree{uiBuild45c73723862c6fc5eb3d6961db2d71fbEot, map[string]*bintree{}},
			"4b5a84aaf1c9485e060c503a0ff8cadb.woff2": &bintree{uiBuild4b5a84aaf1c9485e060c503a0ff8cadbWoff2, map[string]*bintree{}},
			"4f63a23c789567a91aafabfbb17ad9a2.woff2": &bintree{uiBuild4f63a23c789567a91aafabfbb17ad9a2Woff2, map[string]*bintree{}},
			"76a4f23c6be74fd309e0d0fd2c27a5de.svg": &bintree{uiBuild76a4f23c6be74fd309e0d0fd2c27a5deSvg, map[string]*bintree{}},
			"7b5fb88f12bec8143f00e21bc3222124.ttf": &bintree{uiBuild7b5fb88f12bec8143f00e21bc3222124Ttf, map[string]*bintree{}},
			"7c87870ab40d63cfb8870c1f183f9939.ttf": &bintree{uiBuild7c87870ab40d63cfb8870c1f183f9939Ttf, map[string]*bintree{}},
			"893fe14628bd7ac498d550e96367e1be.ttf": &bintree{uiBuild893fe14628bd7ac498d550e96367e1beTtf, map[string]*bintree{}},
			"89889688147bd7575d6327160d64e760.svg": &bintree{uiBuild89889688147bd7575d6327160d64e760Svg, map[string]*bintree{}},
			"ac3f799d5bbaf5196fab15ab8de8431c.ttf": &bintree{uiBuildAc3f799d5bbaf5196fab15ab8de8431cTtf, map[string]*bintree{}},
			"app.dev.js": &bintree{uiBuildAppDevJs, map[string]*bintree{}},
			"app.js": &bintree{uiBuildAppJs, map[string]*bintree{}},
			"cdb1d47e7ffa00c380374f74d2937f7e.eot": &bintree{uiBuildCdb1d47e7ffa00c380374f74d2937f7eEot, map[string]*bintree{}},
			"d329cc8b34667f114a95422aaad1b063.ttf": &bintree{uiBuildD329cc8b34667f114a95422aaad1b063Ttf, map[string]*bintree{}},
			"dfb02f8f6d0cedc009ee5887cc68f1f3.woff": &bintree{uiBuildDfb02f8f6d0cedc009ee5887cc68f1f3Woff, map[string]*bintree{}},
			"e18bbf611f2a2e43afc071aa2f4e1512.ttf": &bintree{uiBuildE18bbf611f2a2e43afc071aa2f4e1512Ttf, map[string]*bintree{}},
			"f4769f9bdb7466be65088239c12046d1.eot": &bintree{uiBuildF4769f9bdb7466be65088239c12046d1Eot, map[string]*bintree{}},
			"fa2772327f55d8198301fdb8bcfc8158.woff": &bintree{uiBuildFa2772327f55d8198301fdb8bcfc8158Woff, map[string]*bintree{}},
			"fe13e4170719c2fc586501e777bde143.ttf": &bintree{uiBuildFe13e4170719c2fc586501e777bde143Ttf, map[string]*bintree{}},
			"index.html": &bintree{uiBuildIndexHtml, map[string]*bintree{}},
			"style.css": &bintree{uiBuildStyleCss, map[string]*bintree{}},
		}},
	}},
}}

// RestoreAsset restores an asset under the given directory
func RestoreAsset(dir, name string) error {
	data, err := Asset(name)
	if err != nil {
		return err
	}
	info, err := AssetInfo(name)
	if err != nil {
		return err
	}
	err = os.MkdirAll(_filePath(dir, filepath.Dir(name)), os.FileMode(0755))
	if err != nil {
		return err
	}
	err = ioutil.WriteFile(_filePath(dir, name), data, info.Mode())
	if err != nil {
		return err
	}
	err = os.Chtimes(_filePath(dir, name), info.ModTime(), info.ModTime())
	if err != nil {
		return err
	}
	return nil
}

// RestoreAssets restores an asset under the given directory recursively
func RestoreAssets(dir, name string) error {
	children, err := AssetDir(name)
	// File
	if err != nil {
		return RestoreAsset(dir, name)
	}
	// Dir
	for _, child := range children {
		err = RestoreAssets(dir, filepath.Join(name, child))
		if err != nil {
			return err
		}
	}
	return nil
}

func _filePath(dir, name string) string {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	return filepath.Join(append([]string{dir}, strings.Split(cannonicalName, "/")...)...)
}

